[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 newprojdata303 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/df_apply.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"df_apply","text":"function takes data frame, function, filter. function can applied column data frame return column dataframe. filter return either true false.","code":""},{"path":"/articles/df_apply.html","id":"use","dir":"Articles","previous_headings":"","what":"Use","title":"df_apply","text":"df_apply(.data, .fun, .filter, …) team used df_apply round lengths widths iris petals using R preset iris data frame. (useful precision isn’t needed user wants round integers analysis.) use df_apply() round numbers, simply use premade function round() place .fun, .numeric() .filter data frame choice: iris_function <- df_apply(iris, round, .numeric) function can used data set, mutate function, filter function. filter function applied columns, one one, checking whether condition true. instance, change text data frame upper case, can use .character() function filter, apply toupper() function change columns characters upper case. df_apply() function returns updated data frame.","code":""},{"path":"/articles/df_apply.html","id":"general-requirements","dir":"Articles","previous_headings":"","what":"General requirements","title":"df_apply","text":"Pass df_apply function: data frame function can applied vector change function can take vector check whether condition true vector (instance, whether contains certain data type)","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Grace Van Farowe. Author. Zander Hartsuff. Author, maintainer. Gabby Freshly. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Van Farowe G, Hartsuff Z, Freshly G (2023). newprojdata303: package takes data frame applies function column condition met. R package version 0.0.0.9000.","code":"@Manual{,   title = {newprojdata303: This package takes a data frame and applies a function to each column where a condition is met},   author = {Grace {Van Farowe} and Zander Hartsuff and Gabby Freshly},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":"/index.html","id":"created-by-grace-van-farowe-zander-hartsuff-and-gabby-freshly","dir":"","previous_headings":"","what":"Created by Grace Van Farowe, Zander Hartsuff, and Gabby Freshly","title":"This package takes a data frame and applies a function to each column where a condition is met","text":"package created Data 303 Calvin University. basic form, includes function called df_apply takes data frame, condition function mutator function. function applies mutator function vectors data frame condition true returns resulting data frame. also includes example data frames test use function . Extra arguments can passed function well. instance, round used, can pass “digits = 3” place “…”. function round numbers 3 decimal places. implementation df_apply() function: Use cases: df_apply(iris, round, .numeric, digits = 3) round numeric columns iris data frame three decimal places, returning new version rounded integers. df_apply(simple_df, toupper, .character) take data frame created testing purposes (included package) return data frame character columns changed upper case. Data sets: package includes boloria, data frame butterflies, iris_rounded, mutated version base r iris data set testing purposes, simple_df, original data set created authors package test df_apply, simple_upper, version simple_df upper case letters. Try help(boloria) etc. information data sets package. See vignette test cases general information df_apply function.","code":"df_apply <- function(.data, .fun, .filter, ...) {   if(!is.data.frame(.data)){     stop(\"You have entered a non data frame. Please try again\")   }   new_df <- lapply(.data, function(x) {     if (.filter(x)) {       .fun(x, ...)     }     data.frame(new_df)   })   return (new_df) }"},{"path":[]},{"path":"/reference/boloria.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Climate conditions of the boloria chariclea butterfly — boloria","text":"https://datadryad.org/stash/dataset/doi:10.5061/dryad.43gt3   boloria   Data study wing lengths butterflies  datasets","code":""},{"path":"/reference/boloria.html","id":"boloria","dir":"Reference","previous_headings":"","what":"boloria","title":"Climate conditions of the boloria chariclea butterfly — boloria","text":"data frame 5 rows 5 columns year Data collected 1996 - 2013 site Seven sites measurements taken sex sex butterfly WL Wing length DOY Day year Snow Snowfall year inches mayjun Diffence wing length May June","code":""},{"path":"/reference/dd_rounded1.html","id":null,"dir":"Reference","previous_headings":"","what":"dd_rounded1 — dd_rounded1","title":"dd_rounded1 — dd_rounded1","text":"version decimal_data numeric columns mean greater 10 rounded nearest 10. testing df_apply .","code":""},{"path":"/reference/dd_rounded1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dd_rounded1 — dd_rounded1","text":"","code":"dd_rounded1"},{"path":[]},{"path":"/reference/dd_rounded1.html","id":"dd-rounded-","dir":"Reference","previous_headings":"","what":"dd_rounded1","title":"dd_rounded1 — dd_rounded1","text":"data frame 6 rows 5 columns: medium Medium sized numbers decimals, rounded words characters; rounding apply big large numbers, rounded nearest 10 mixed large small numbers, rounded nearest 10 small small numbers, rounded","code":""},{"path":[]},{"path":"/reference/dd_rounded2.html","id":null,"dir":"Reference","previous_headings":"","what":"dd_rounded2 — dd_rounded2","title":"dd_rounded2 — dd_rounded2","text":"version decimal_data numeric columns rounded 3 deimal places.","code":""},{"path":"/reference/dd_rounded2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dd_rounded2 — dd_rounded2","text":"","code":"dd_rounded2"},{"path":[]},{"path":"/reference/dd_rounded2.html","id":"dd-rounded-","dir":"Reference","previous_headings":"","what":"dd_rounded2","title":"dd_rounded2 — dd_rounded2","text":"data frame 6 rows 5 columns: medium Medium sized numbers decimals, rounded words characters; rounding apply big large numbers, decimals rounding anything mixed large small numbers, rounded small small numbers, rounded","code":""},{"path":[]},{"path":"/reference/decimal_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Decimal data — decimal_data","title":"Decimal data — decimal_data","text":"testing data numbers varying lengths","code":""},{"path":"/reference/decimal_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decimal data — decimal_data","text":"","code":"decimal_data"},{"path":[]},{"path":"/reference/decimal_data.html","id":"decimal-data","dir":"Reference","previous_headings":"","what":"decimal_data","title":"Decimal data — decimal_data","text":"data frame 6 rows 5 columns: medium Medium sized numbers decimals words characters; rounding apply big large numbers mixed large small numbers small small numbers","code":""},{"path":[]},{"path":"/reference/df_apply.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to rows in the data frame for which a condition is true — df_apply","title":"Apply a function to rows in the data frame for which a condition is true — df_apply","text":"Apply function rows data frame condition true","code":""},{"path":"/reference/df_apply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to rows in the data frame for which a condition is true — df_apply","text":"","code":"df_apply(.data, .fun, .filter, ...)"},{"path":"/reference/df_apply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function to rows in the data frame for which a condition is true — df_apply","text":".data data frame. .fun function takes vector returns changes. .filter function takes vector returns bool letting df_apply know whether apply .fun","code":""},{"path":"/reference/df_apply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function to rows in the data frame for which a condition is true — df_apply","text":"new_df, updated data frame columns .filter returns true changed .fun","code":""},{"path":"/reference/df_apply.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function to rows in the data frame for which a condition is true — df_apply","text":"","code":"df_apply(iris, round, is.numeric, digits = 4) #> Error in df_apply(iris, round, is.numeric, digits = 4): could not find function \"df_apply\" df_apply(simple_df, toupper, is.character) #> Error in df_apply(simple_df, toupper, is.character): could not find function \"df_apply\""},{"path":[]},{"path":"/reference/iris_rounded.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Iris data set rounded — iris_rounded","text":"iris_rounded   Base R iris data set numeric columns rounded  datasets","code":""},{"path":"/reference/iris_rounded.html","id":"iris-rounded","dir":"Reference","previous_headings":"","what":"iris_rounded","title":"Iris data set rounded — iris_rounded","text":"iris_rounded data frame 150 cases (rows) 5 variables (columns) named Sepal.Length, Sepal.Width, Petal.Length, Petal.Width, Species. Use help(iris) see details data","code":""},{"path":"/reference/newprojdata303.df_apply.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to rows in the data frame for which a condition is true — newprojdata303.df_apply","title":"Apply a function to rows in the data frame for which a condition is true — newprojdata303.df_apply","text":"Apply function rows data frame condition true","code":""},{"path":"/reference/newprojdata303.df_apply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to rows in the data frame for which a condition is true — newprojdata303.df_apply","text":"","code":"newprojdata303.df_apply(.data, .fun, .filter, ...)"},{"path":"/reference/newprojdata303.df_apply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function to rows in the data frame for which a condition is true — newprojdata303.df_apply","text":".data data frame. .fun function takes vector returns changes. .filter function takes vector returns bool letting df_apply know whether apply .fun","code":""},{"path":"/reference/newprojdata303.df_apply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function to rows in the data frame for which a condition is true — newprojdata303.df_apply","text":"new_df, updated data frame columns .filter returns true changed .fun","code":""},{"path":"/reference/newprojdata303.df_apply.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function to rows in the data frame for which a condition is true — newprojdata303.df_apply","text":"","code":"df_apply(iris, round, is.numeric, digits = 4) #> Error in df_apply(iris, round, is.numeric, digits = 4): could not find function \"df_apply\" df_apply(simple_df, toupper, is.character) #> Error in df_apply(simple_df, toupper, is.character): could not find function \"df_apply\""},{"path":[]},{"path":"/reference/simple_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Testing data for data 303 project — simple_df","text":"simple_df   Simple data containing columns numeric character data use testing df_apply function.  datasets","code":""},{"path":"/reference/simple_df.html","id":"simple-df","dir":"Reference","previous_headings":"","what":"simple_df","title":"Testing data for data 303 project — simple_df","text":"data frame 5 rows 5 columns X1 vector letters -E X2 words , cat, , , hat X3 Random numbers decimal format X4 Random integers X5 Names upper lower case letters","code":""},{"path":[]},{"path":"/reference/simple_up.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Testing data for data 303 project — simple_up","text":"simple_up   Simple data containing columns numeric character data use testing df_apply function, uppercase  datasets","code":""},{"path":"/reference/simple_up.html","id":"simple-up","dir":"Reference","previous_headings":"","what":"simple_up","title":"Testing data for data 303 project — simple_up","text":"data frame 5 rows 5 columns X1 vector letters -E X2 words , CAT, , , HAT X3 Random numbers decimal format X4 Random integers X5 Names upper case letters","code":""}]
